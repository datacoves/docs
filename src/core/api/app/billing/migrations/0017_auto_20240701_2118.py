# Generated by Django 3.2.20 on 2024-07-01 21:18

import billing.models.tally
import django.core.serializers.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('billing', '0016_rename_items_plan_variants'),
    ]

    operations = [
        migrations.AlterField(
            model_name='event',
            name='context',
            field=models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text="This is a JSON dictionary which is provided when an event is created.  The event_type determines what may be in here; for ENV_DELETED or SERVICES_CHANGED, this will at least have an 'id' key with the environment ID impacted by the change."),
        ),
        migrations.AlterField(
            model_name='event',
            name='users',
            field=models.JSONField(default=list, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='Users with access to at least one code-server pod.  This is a JSON list of user slugs.'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='billing_period',
            field=models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', help_text='The frequency of billing', max_length=20),
        ),
        migrations.AlterField(
            model_name='plan',
            name='environment_quotas',
            field=models.JSONField(blank=True, default=dict, help_text='The default environment quota -- this can be overriden per environment.  The format is a Kubernetes resource quota: https://kubernetes.io/docs/concepts/policy/resource-quotas/', null=True),
        ),
        migrations.AlterField(
            model_name='plan',
            name='kind',
            field=models.CharField(choices=[('starter', 'Starter'), ('growth', 'Growth'), ('custom', 'Custom')], default='starter', help_text='The type of plan', max_length=20),
        ),
        migrations.AlterField(
            model_name='plan',
            name='name',
            field=models.CharField(help_text='Human readable name.  If left blank, this will be set based on kind and period.', max_length=50),
        ),
        migrations.AlterField(
            model_name='plan',
            name='slug',
            field=models.SlugField(help_text='starter-monthly, starter-yearly, etc.  If left blank, this will be automatically set based on kind and period.', unique=True),
        ),
        migrations.AlterField(
            model_name='plan',
            name='variants',
            field=models.JSONField(blank=True, default=list, help_text='JSON list of Stripe subscription items to allow multiple prices for a given plan.', null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(blank=True, help_text='Additional description if needed.', null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='id',
            field=models.CharField(help_text='This should match the corresponding Stripe product ID; it will start with prod_', max_length=40, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(help_text='Human readable, descriptive name of product', max_length=100),
        ),
        migrations.AlterField(
            model_name='product',
            name='service_name',
            field=models.CharField(blank=True, help_text="Used to associate services that need to be charged by instance.  This may be set for you if left blank and we can infer it from the 'name'.", max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='stripe_data',
            field=models.JSONField(default=dict, help_text='JSON dictionary which is a representation of the Stripe object (i.e. what Stripe uses in its API)'),
        ),
        migrations.AlterField(
            model_name='product',
            name='tally_name',
            field=models.SlugField(blank=True, help_text="The name of a tally that keeps track of the usage for this product.  See :model:`billing.Tally`  This may be set for you if left blank and 'name' contains 'airbyte' or 'airflow' in addition to the word 'compute'", null=True),
        ),
        migrations.AlterField(
            model_name='tally',
            name='period',
            field=models.DurationField(default=billing.models.tally.default_tally_period, help_text='Time delta between tally marks.  The smaller this delta, the more sensitive we are to billing changes.  See :model:`billing.TallyMark`'),
        ),
    ]
