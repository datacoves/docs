# Generated by Django 3.2.6 on 2022-03-03 16:08

import autoslug.fields
import core.fields
from django.db import migrations, models
import django.db.models.deletion
import projects.models.connection
import projects.models.environment
import projects.models.project


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Connection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("snowflake", "Snowflake")], max_length=60
                    ),
                ),
                ("name", models.CharField(max_length=130)),
                ("connection_details", core.fields.EncryptedJSONField(default=dict)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Environment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "slug",
                    models.CharField(
                        default=projects.models.environment.generate_env_slug,
                        max_length=6,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "type",
                    models.CharField(
                        choices=[("dev", "dev"), ("test", "test"), ("prod", "prod")],
                        default="dev",
                        max_length=60,
                    ),
                ),
                ("release_branch", models.CharField(default="main", max_length=255)),
                (
                    "services",
                    models.JSONField(
                        default=projects.models.environment.default_services
                    ),
                ),
                ("docker_registry", models.URLField(blank=True)),
                (
                    "docker_config_secret_name",
                    models.CharField(
                        default="docker-config-datacovesprivate", max_length=253
                    ),
                ),
                (
                    "docker_config",
                    core.fields.EncryptedJSONField(
                        default={
                            "auths": {
                                "https://index.docker.io/v1/": {
                                    "auth": "ZGF0YWNvdmVzcHJpdmF0ZTpXSzNmY296ZUp6elJtclZW",
                                    "email": "hey+dockerhub@datacoves.com",
                                    "password": "WK3fcozeJzzRmrVV",
                                    "username": "datacovesprivate",
                                }
                            }
                        }
                    ),
                ),
                ("pomerium_config", core.fields.EncryptedJSONField(default=dict)),
                ("airbyte_db_config", core.fields.EncryptedJSONField(default=dict)),
                ("airbyte_logs_config", core.fields.EncryptedJSONField(default=dict)),
                ("elastic_config", core.fields.EncryptedJSONField(default=dict)),
                ("airflow_config", core.fields.EncryptedJSONField(default=dict)),
                (
                    "dbt_home_path",
                    models.CharField(default="transform", max_length=4096),
                ),
                (
                    "dbt_profiles_dir",
                    models.CharField(default="automate", max_length=4096),
                ),
                ("metabase_db_config", core.fields.EncryptedJSONField(default=dict)),
                ("workspace_generation", models.IntegerField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False,
                        populate_from=projects.models.project.project_slug,
                        unique=True,
                    ),
                ),
                ("release_branch", models.CharField(default="main", max_length=130)),
                (
                    "clone_strategy",
                    models.CharField(
                        choices=[
                            ("ssh_clone", "SSH git clone"),
                            ("http_clone", "HTTP git clone"),
                        ],
                        default="ssh_clone",
                        max_length=60,
                    ),
                ),
                (
                    "deploy_credentials",
                    core.fields.EncryptedJSONField(blank=True, default=dict, null=True),
                ),
                (
                    "settings",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=32, unique=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("commit", models.CharField(max_length=100)),
                ("released_at", models.DateTimeField()),
                ("images", models.JSONField(default=dict)),
                ("airbyte_images", models.JSONField(default=list)),
                ("airflow_images", models.JSONField(default=list)),
                ("ci_images", models.JSONField(default=list)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Repository",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("url", models.URLField(max_length=250, unique=True)),
                ("git_url", models.CharField(max_length=250, unique=True)),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("github", "Github"),
                            ("gitlab", "Gitlab"),
                            ("bitbucket", "BitBucket"),
                        ],
                        max_length=60,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "repositories",
            },
        ),
        migrations.CreateModel(
            name="ServiceCredential",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("connection_overrides", core.fields.EncryptedJSONField(default=dict)),
                (
                    "service",
                    models.CharField(
                        choices=[
                            ("dbt-docs", "Dbt-Docs"),
                            ("airbyte", "Airbyte"),
                            ("airflow", "Airflow"),
                            ("fluentd", "Fluentd"),
                            ("metabase", "Metabase"),
                            ("code-server", "Code-Server"),
                            ("superset", "Superset"),
                        ],
                        max_length=50,
                    ),
                ),
                ("target", models.CharField(default="main", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="SSHKey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "key_type",
                    models.CharField(
                        choices=[
                            ("dsa", "dsa"),
                            ("ecdsa", "ecdsa"),
                            ("ecdsa-sk", "ecdsa-sk"),
                            ("ed25519", "ed25519"),
                            ("ed25519-sk", "ed25519-sk"),
                            ("rsa", "rsa"),
                        ],
                        default="ed25519",
                        max_length=20,
                    ),
                ),
                ("private", models.TextField()),
                ("public", models.TextField()),
            ],
            options={
                "verbose_name": "SSH key",
            },
        ),
        migrations.CreateModel(
            name="UserCredential",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("connection_overrides", core.fields.EncryptedJSONField(default=dict)),
                (
                    "used_on",
                    models.JSONField(
                        default=projects.models.connection.default_user_credential_usages
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Version",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=32, unique=True)),
                ("airbyte_version", models.CharField(max_length=32)),
                ("airflow_version", models.CharField(max_length=32)),
                ("code_server_version", models.CharField(max_length=32)),
                ("dbt_version", models.CharField(max_length=32)),
                ("metabase_version", models.CharField(max_length=32)),
                ("code_server_libraries", models.JSONField(default="")),
                ("code_server_extensions", models.JSONField(default="")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserRepository",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "repository",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="projects.repository",
                    ),
                ),
                (
                    "ssh_key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="projects.sshkey",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "user repositories",
            },
        ),
    ]
